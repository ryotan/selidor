version: 2.1

executors:
  jdk11:
    docker:
      - image: circleci/openjdk:11.0.4-jdk-stretch-node-browsers
    working_directory: &workspace /tmp/workspace
    environment:
      # Required environment variable from a Context
      #   - BINTRAY_REPOSITORY
      #   - BINTRAY_USER
      #   - BINTRAY_KEY
      #   - ARTIFACTORY_URL
      #   - ARTIFACTORY_USER
      #   - ARTIFACTORY_APIKEY
      ARTIFACTORY_SERVER_ID: artifactory-server
      BINTRAY_DEFAULT_LICENSES: Apache-2.0
      JFROG_CLI_BIN_RELDIR: &jfrog_cli_bin_dir .ci/.jfrog/bin
      JFROG_CLI_HOME_RELDIR: &jfrog_cli_home_dir .ci/.jfrog
      JFROG_CLI_LOG_LEVEL: DEBUG
      JFROG_CLI_TEMP_RELDIR: &jfrog_cli_temp_dir .ci/.jfrog/temp
      JFROG_CLI_VERSION: &jfrog_cli_version 1.28.0
      MAVEN_DISTRIBUTION_DIR: &maven_distribution_dir dist
      MAVEN_LOCAL_REPOSITORY: &maven_local_repository .m2/repository
      MAVEN_USER_HOME: &maven_user_home .mvnw/dists
      TEST_REPORT_DIR: &test_report_dir test-reports/junit
      DRY_RUN: false


commands:
  persist_artifacts:
    steps:
      - persist_to_workspace:
          root: *workspace
          paths:
            - *maven_distribution_dir
            - *maven_local_repository

  persist_mvnw:
    steps:
      - persist_to_workspace:
          root: *workspace
          paths:
            - *maven_user_home
            - .mvn/wrapper/maven-wrapper.jar

  attach_current_workspace:
    steps:
      - attach_workspace:
          at: *workspace

  save_test_results:
    steps:
      - store_test_results:
          path: *test_report_dir

  aggregate_test_results:
    steps:
      - run:
          name: Aggregate test results
          command: .ci/scripts/maven-aggregate-test-report.sh

  build_production_projects:
    steps:
      - run_with_maven_cache:
          pom_files: pom.xml selidor-projects/selidor-dependencies/pom.xml selidor-projects/selidor-parent/pom.xml
          steps:
            - run:
                name: Build artifacts of Selidor projects
                command: .ci/scripts/maven-deploy.sh selidor-projects
      - aggregate_test_results
      - save_test_results

  test_production_projects:
    steps:
      - run_with_maven_cache:
          pom_files: pom.xml selidor-projects/selidor-dependencies/pom.xml selidor-projects/selidor-parent/pom.xml
          steps:
            - run:
                name: Build artifacts of Selidor projects
                command: .ci/scripts/maven-deploy.sh selidor-projects
      - aggregate_test_results
      - save_test_results

  run_tests_project:
    parameters:
      project:
        type: string
    steps:
      - run_with_maven_cache:
          pom_files: << parameters.project >>/pom.xml
          steps:
            - run:
                name: Run tests of Selidor projects - << parameters.project >>
                command: .ci/scripts/maven-verify.sh << parameters.project >>
      - aggregate_test_results
      - save_test_results

  prepare_mvnw:
    steps:
      - run:
          name: Generate cache checksum for maven-wrapper.
          command: cat .mvn/wrapper/maven-wrapper.properties > /tmp/maven_wrapper_cache_seed
      - restore_cache:
          keys:
            - maven-wrapper-{{ checksum "/tmp/maven_wrapper_cache_seed" }}
            - maven-wrapper-
      - run:
          name: Prepare Maven Wrapper
          command: ./mvnw --version
      - save_cache:
          paths:
            - *maven_user_home
            - .mvn/wrapper/maven-wrapper.jar
          key: maven-wrapper-{{ checksum "/tmp/maven_wrapper_cache_seed" }}
          when: always

  run_with_maven_cache:
    parameters:
      pom_files:
        type: string
        default: pom.xml
      steps:
        type: steps
    steps:
      - run:
          name: Generate cache checksum for Maven dependencies.
          command: cat << parameters.pom_files >> > /tmp/maven_repository_cache_seed
      - restore_cache:
          keys:
            - maven-repository-{{ checksum "/tmp/maven_repository_cache_seed" }}
            - maven-repository-
      - steps: << parameters.steps >>
      - save_cache:
          paths:
            - *maven_local_repository
          key: maven-repository-{{ checksum "/tmp/maven_repository_cache_seed" }}
          when: always

  prepare_jfrog_cli:
    parameters:
      version:
        type: string
        default: *jfrog_cli_version
    steps:
      - restore_cache:
          keys:
            - jfrog-cli-<< parameters.version >>
      - run:
          name: Download jfrog-cli
          command: .ci/scripts/jfrog-cli-download.sh
      - save_cache:
          paths:
            - *jfrog_cli_bin_dir
          key: jfrog-cli-<< parameters.version >>

  persist_jfrog_cli:
    steps:
      - persist_to_workspace:
          root: *workspace
          paths:
            - *jfrog_cli_home_dir
            - *jfrog_cli_temp_dir
            - *jfrog_cli_bin_dir

  jfrog_upload:
    parameters:
      type:
        type: string
    steps:
      - run:
          name: Upload artifacts to Artifactory
          command: .ci/scripts/jfrog-upload.sh << parameters.type >>

  jfrog_promote:
    steps:
      - run:
          name: Promote artifacts from Artifactory to Bintray
          command: .ci/scripts/jfrog-promote-to-bintray.sh


jobs:
  test_production_projects:
    executor: jdk11
    steps:
      - checkout
      - prepare_mvnw
      - persist_mvnw
      - test_production_projects

  build_production_projects:
    executor: jdk11
    steps:
      - checkout
      - prepare_mvnw
      - persist_mvnw
      - build_production_projects
      - persist_artifacts

  smoke_tests:
    executor: jdk11
    steps:
      - checkout
      - attach_current_workspace
      - run_tests_project:
          project: selidor-tests/selidor-smoke-tests

  integration_tests:
    executor: jdk11
    steps:
      - checkout
      - attach_current_workspace
      - run_tests_project:
          project: selidor-tests/selidor-integration-tests

  stage:
    context: bintray
    executor: jdk11
    parameters:
      release_type:
        type: string
    steps:
      - checkout
      - prepare_jfrog_cli
      - persist_jfrog_cli
      - attach_current_workspace
      - jfrog_upload:
          type: << parameters.release_type >>

  promote:
    context: bintray
    executor: jdk11
    steps:
      - checkout
      - prepare_jfrog_cli
      - persist_jfrog_cli
      - attach_current_workspace
      - jfrog_promote


workflows:
  version: 2

  on_push:
    jobs:
      - test_production_projects:
          filters:
            branches:
              ignore:
                - feature/*
                - chore/*
                - hotfix/*
                - master
                - /\d+\.\d+\.x/
            tags:
              ignore:
                - /v\d+\.\d+\.\d+/

  pull_request:
    jobs:
      - build_production_projects:
          filters: &pull_request
            branches:
              only:
                - feature/*
                - chore/*
                - hotfix/*
      - smoke_tests:
          filters: *pull_request
          requires:
            - build_production_projects
      - integration_tests:
          filters: *pull_request
          requires:
            - build_production_projects
      - stage:
          filters: *pull_request
          requires:
            - smoke_tests
            - integration_tests
          release_type: pull-request

  snapshot:
    jobs:
      - build_production_projects:
          filters: &master
            branches:
              only:
                - master
                - /\d+\.\d+\.x/
      - smoke_tests:
          filters: *master
          requires:
            - build_production_projects
      - integration_tests:
          filters: *master
          requires:
            - build_production_projects
      - stage:
          filters: *master
          requires:
            - smoke_tests
            - integration_tests
          release_type: snapshot

  release:
    jobs:
      - build_production_projects:
          filters: &release
            tags:
              only:
                - /v\d+\.\d+\.\d+/
            branches:
              ignore:
                - /.*/
      - smoke_tests:
          filters: *release
          requires:
            - build_production_projects
      - integration_tests:
          filters: *release
          requires:
            - build_production_projects
      - stage:
          filters: *release
          requires:
            - smoke_tests
            - integration_tests
          release_type: release
      - wait_for_approval:
          filters: *release
          type: approval
          requires:
            - stage
      - promote:
          filters: *release
          requires:
            - wait_for_approval
